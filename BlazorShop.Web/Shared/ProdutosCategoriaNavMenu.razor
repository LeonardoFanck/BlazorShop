@if (CategoriasDto == null && MensagemErro == null)
{
    <ExibirSpinner />
}
else if (MensagemErro != null)
{
    <ExibirErro MensagemErro="@MensagemErro" />
}
else
{
    @foreach (var categoria in CategoriasDto)
    {
        var link = "/ProdutosPorCategoria/" + categoria.Id;

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@link">
                <span class="@categoria.IconCSS"></span>&nbsp; &nbsp; @categoria.Nome
            </NavLink>
        </div>
    }
}

@code {
    [Inject]
    public IProdutoService? ProdutoService { get; set; }

    [Inject]
    public ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    [Inject]
    public IGerenciaCarrinhoItensLocalStorageService? _GerenciaCarrinhoItens { get; set; }

    public IEnumerable<CategoriaDto>? CategoriasDto { get; set; }

    public List<CarrinhoItemDto>? carrinhoCompraItens { get; set; }


    public string? MensagemErro { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CategoriasDto =  await ProdutoService.GetCategorias();

            carrinhoCompraItens = await _GerenciaCarrinhoItens.GetCollection();

            var QuantidadeTotal = carrinhoCompraItens.Sum(q => q.Quantidade);
            var PrecoTotal = carrinhoCompraItens.Sum(p => p.PrecoTotal);

            CarrinhoCompraService.RaiseEventOnCarrinhoCompraChanged(QuantidadeTotal, PrecoTotal);
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }
}
